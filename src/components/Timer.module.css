.overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.5);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 2000;
  backdrop-filter: blur(8px);
  animation: fadeIn 0.3s ease;
}

.overlay.light {
  background: rgba(0, 0, 0, 0.2);
}

.dialog {
  background: #1e1e1e;
  border-radius: 8px;
  padding: 24px;
  min-width: 300px;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}

.light .dialog {
  background: #ffffff;
  color: #1e1e1e;
}

.dialog h3 {
  margin: 0 0 16px;
  font-size: 1.2rem;
  font-weight: 500;
}

.presets {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 8px;
  margin-bottom: 16px;
}

.preset {
  background: #2d2d2d;
  border: none;
  color: inherit;
  padding: 8px;
  border-radius: 4px;
  cursor: pointer;
  transition: background-color 0.2s;
}

.light .preset {
  background: #f0f0f0;
}

.preset:hover {
  background: #3d3d3d;
}

.light .preset:hover {
  background: #e0e0e0;
}

.customTime {
  display: flex;
  align-items: center;
  gap: 8px;
  margin-bottom: 16px;
}

.timerInput {
  background: #2d2d2d;
  border: 1px solid #3d3d3d;
  color: inherit;
  padding: 8px;
  border-radius: 4px;
  width: 80px;
  font-size: 1rem;
}

.light .timerInput {
  background: #f0f0f0;
  border-color: #e0e0e0;
}

.actions {
  display: flex;
  justify-content: flex-end;
  gap: 8px;
}

.startButton, .cancelButton {
  padding: 8px 16px;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  font-size: 0.9rem;
  transition: opacity 0.2s;
}

.startButton {
  background: #0078d4;
  color: white;
}

.cancelButton {
  background: transparent;
  color: inherit;
}

.startButton:hover, .cancelButton:hover {
  opacity: 0.8;
}

.timerButton {
  all: unset;
  cursor: pointer;
  padding: 4px 8px;
  border-radius: 6px;
  transition: all 0.2s ease;
  display: flex;
  align-items: center;
  gap: 4px;
}

.timerButton:hover {
  background: rgba(255, 255, 255, 0.1);
}

:global(.lightTheme) .timerButton:hover {
  background: rgba(0, 0, 0, 0.05);
}

.timerPopup {
  position: fixed;
  bottom: 24px;
  right: 24px;
  background: #1e1e1e;
  border-radius: 8px;
  padding: 16px;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  z-index: 1000;
  display: flex;
  flex-direction: column;
  gap: 12px;
  min-width: 200px;
}

.light .timerPopup {
  background: #ffffff;
  color: #1e1e1e;
}

.timerDisplay {
  display: flex;
  align-items: center;
  gap: 4px;
}

.clockIcon {
  font-size: 14px;
  opacity: 0.7;
}

.timerControls {
  display: flex;
  justify-content: center;
  gap: 8px;
}

.timerControls button {
  background: transparent;
  border: 1px solid currentColor;
  color: inherit;
  padding: 4px 12px;
  border-radius: 4px;
  cursor: pointer;
  font-size: 0.9rem;
  transition: all 0.2s;
}

.timerControls button:hover {
  background: rgba(255, 255, 255, 0.1);
}

.light .timerControls button:hover {
  background: rgba(0, 0, 0, 0.1);
}

.title {
  margin: 0 0 20px 0;
  font-size: 24px;
  font-weight: 500;
  text-align: center;
}

.form {
  display: flex;
  flex-direction: column;
  gap: 24px;
}

.inputWrapper {
  position: relative;
  display: flex;
  align-items: center;
}

.input {
  all: unset;
  width: 100%;
  padding: 12px 80px 12px 16px;
  background: rgba(255, 255, 255, 0.1);
  border-radius: 8px;
  font-size: 20px;
  text-align: center;
  transition: background-color 0.2s ease;
}

.input:hover {
  background: rgba(255, 255, 255, 0.15);
}

.input:focus {
  background: rgba(255, 255, 255, 0.2);
}

.light .input {
  background: rgba(0, 0, 0, 0.05);
}

.light .input:hover {
  background: rgba(0, 0, 0, 0.08);
}

.light .input:focus {
  background: rgba(0, 0, 0, 0.1);
}

.inputLabel {
  position: absolute;
  right: 16px;
  color: rgba(255, 255, 255, 0.5);
  font-size: 15px;
  pointer-events: none;
}

.light .inputLabel {
  color: rgba(0, 0, 0, 0.4);
}

.buttons {
  display: flex;
  gap: 12px;
  margin-top: 8px;
}

.timerContainer {
  position: relative;
  display: flex;
  align-items: center;
  min-width: 50px;
  font-variant-numeric: tabular-nums;
  font-size: 15px;
  opacity: 0.85;
  transition: opacity 0.2s ease;
}

.timerContainer:hover {
  opacity: 1;
}

.timerButton.active {
  opacity: 1;
  color: #4a9eff;
  background: rgba(74, 158, 255, 0.1);
}

.modifyButton,
.resetButton {
  all: unset;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 28px;
  height: 28px;
  border-radius: 6px;
  opacity: 0.7;
  color: inherit;
  transition: all 0.2s ease;
  background: rgba(255, 255, 255, 0.05);
}

.timerContainer:hover .modifyButton,
.timerContainer:hover .resetButton {
  opacity: 0.85;
}

.modifyButton:hover,
.resetButton:hover {
  opacity: 1 !important;
  background: rgba(255, 255, 255, 0.1);
}

.timerText {
  min-width: 60px;
  text-align: center;
}

/* Style .timerDialog as a modal, removing absolute positioning */
.timerDialog {
  /* Removed absolute positioning */
  /* transform: translateX(-50%); */ 
  /* Removed transform */
  background: rgba(30, 30, 30, 0.95);
  border-radius: 12px; /* Adjusted from 16px */
  padding: 24px;
  width: 90%; /* Use width instead of min-width for responsiveness */
  max-width: 360px; /* Limit max width */
  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.2);
  animation: dialogAppear 0.2s ease; /* Re-use dialogAppear animation */
  /* Removed z-index, handled by overlay */
}

.dialogHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 24px;
}

.dialogHeader h3 {
  margin: 0;
  font-size: 20px;
  font-weight: 500;
  color: rgba(255, 255, 255, 0.9);
}

.closeButton {
  all: unset;
  cursor: pointer;
  width: 32px;
  height: 32px;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 24px;
  color: rgba(255, 255, 255, 0.6);
  border-radius: 8px;
  transition: all 0.2s ease;
}

.closeButton:hover {
  background: rgba(255, 255, 255, 0.1);
  color: rgba(255, 255, 255, 0.8);
}

.presets {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  gap: 8px;
  margin-bottom: 16px;
}

.presetButtons {
  position: absolute;
  bottom: 100%;
  right: 0;
  margin-bottom: 8px;
  background: var(--nav-bg);
  border-radius: 8px;
  padding: 8px;
  box-shadow: 0 -4px 16px rgba(0, 0, 0, 0.1);
  display: flex;
  flex-direction: column-reverse;
  gap: 4px;
  min-width: 100px;
  z-index: 10;
  animation: slideUp 0.2s ease;
}

.presetButton {
  all: unset;
  cursor: pointer;
  padding: 8px 12px;
  border-radius: 6px;
  font-size: 14px;
  opacity: 0.8;
  transition: all 0.2s ease;
  text-align: center;
  background: rgba(255, 255, 255, 0.1);
}

.presetButton:hover {
  opacity: 1;
  background: rgba(255, 255, 255, 0.15);
  transform: translateX(2px);
}

:global(.lightTheme) .presetButton {
  background: rgba(0, 0, 0, 0.05);
  color: #333;
}

:global(.lightTheme) .presetButton:hover {
  background: rgba(0, 0, 0, 0.1);
}

.activeTimer {
  display: flex;
  align-items: center;
  gap: 8px;
}

.time {
  font-size: 15px;
  font-variant-numeric: tabular-nums;
}

.controls {
  display: flex;
  gap: 4px;
  align-items: center;
}

.control {
  all: unset;
  cursor: pointer;
  padding: 4px;
  border-radius: 4px;
  opacity: 0.7;
  transition: all 0.2s ease;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 14px;
}

.control:hover {
  opacity: 1;
  background: rgba(255, 255, 255, 0.1);
  transform: translateY(-1px);
}

.control:active {
  transform: translateY(0);
}

:global(.lightTheme) .control:hover {
  background: rgba(0, 0, 0, 0.1);
}

@keyframes dialogAppear {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes slideUp {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Light theme */
[data-theme='light'] .timerDialog {
  background: rgba(255, 252, 242, 0.95);
  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1); /* Adjusted shadow */
}

[data-theme='light'] .dialogHeader h3 {
  color: rgba(0, 0, 0, 0.9);
}

[data-theme='light'] .closeButton {
  color: rgba(0, 0, 0, 0.6);
}

[data-theme='light'] .closeButton:hover {
  background: rgba(0, 0, 0, 0.1);
  color: rgba(0, 0, 0, 0.8);
}

[data-theme='light'] .inputLabel {
  color: rgba(0, 0, 0, 0.6);
}

[data-theme='light'] .timeInput {
  background: rgba(0, 0, 0, 0.05);
  border-color: rgba(0, 0, 0, 0.1);
  color: rgba(0, 0, 0, 0.9);
}

[data-theme='light'] .timeInput:hover {
  border-color: rgba(0, 0, 0, 0.2);
}

[data-theme='light'] .timeInput:focus {
  border-color: #0066cc;
  background: rgba(0, 0, 0, 0.08);
}

[data-theme='light'] .cancelButton {
  background: rgba(0, 0, 0, 0.05);
  color: rgba(0, 0, 0, 0.9);
}

[data-theme='light'] .cancelButton:hover {
  background: rgba(0, 0, 0, 0.1);
}

[data-theme='light'] .startButton {
  background: #0066cc;
}

[data-theme='light'] .startButton:hover {
  background: #0052a3;
}

.customTime {
  display: flex;
  flex-direction: column;
  gap: 16px;
}

.timeInputs {
  display: flex;
  justify-content: center;
  gap: 12px;
}

.inputGroup {
  display: flex;
  flex-direction: column;
  gap: 8px;
}

.timeInput {
  background: rgba(255, 255, 255, 0.1);
  border: 1px solid rgba(255, 255, 255, 0.2);
  border-radius: 8px;
  padding: 12px;
  color: rgba(255, 255, 255, 0.9);
  font-size: 16px;
  transition: all 0.2s ease;
}

.timeInput:hover {
  border-color: rgba(255, 255, 255, 0.3);
}

.timeInput:focus {
  outline: none;
  border-color: #4a9eff;
  background: rgba(255, 255, 255, 0.15);
}

.timeUnit {
  font-size: 13px;
  opacity: 0.7;
}

.dialogActions {
  display: flex;
  gap: 12px;
  margin-top: 8px;
}

.cancelButton,
.startButton {
  flex: 1;
  padding: 12px;
  border: none;
  border-radius: 8px;
  font-size: 15px;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s ease;
}

.cancelButton {
  background: rgba(255, 255, 255, 0.1);
  color: rgba(255, 255, 255, 0.9);
}

.cancelButton:hover {
  background: rgba(255, 255, 255, 0.15);
}

.startButton {
  background: #4a9eff;
  color: white;
}

.startButton:hover {
  background: #3d8be6;
}

.startButton:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

/* Light theme styles */
:global(.lightTheme) .customTimeInput {
  background: rgba(0, 0, 0, 0.05);
}

:global(.lightTheme) .customTimeInput:focus {
  background: rgba(0, 0, 0, 0.08);
}

:global(.lightTheme) .customTimeInput::placeholder {
  color: rgba(0, 0, 0, 0.4);
}

:global(.lightTheme) .customSubmit {
  background: rgba(0, 102, 204, 0.1);
  color: #0066cc;
}

:global(.lightTheme) .customSubmit:hover {
  background: rgba(0, 102, 204, 0.15);
}

:global(.lightTheme) .customCancel {
  background: rgba(0, 0, 0, 0.05);
}

:global(.lightTheme) .customCancel:hover {
  background: rgba(0, 0, 0, 0.08);
}

:global(.lightTheme) .customButton:hover {
  border-color: rgba(0, 0, 0, 0.3) !important;
}

/* Ensure custom button visibility in light theme */
:global(.lightTheme) .presetButton.customButton {
  color: rgba(0, 0, 0, 0.7); /* Make text darker */
  border: 1px solid rgba(0, 0, 0, 0.15); /* Add subtle border */
}

:global(.lightTheme) .presetButton.customButton:hover {
  color: rgba(0, 0, 0, 0.9); 
  border-color: rgba(0, 0, 0, 0.25);
  background: rgba(0, 0, 0, 0.08);
}

/* Ensure overlay is always full-screen and blurred */
.overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.5);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 2000;
  backdrop-filter: blur(8px);
  animation: fadeIn 0.3s ease;
}

[data-theme='light'] .overlay {
  background: rgba(0,0,0,0.18);
  backdrop-filter: blur(8px);
}

.notification {
  background: rgba(30, 30, 30, 0.95);
  border-radius: 16px;
  padding: 32px;
  max-width: 400px;
  width: 90%;
  text-align: center;
  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.2);
  animation: slideUp 0.3s ease;
  transition: all 0.2s ease;
}

.content {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 16px;
}

.icon {
  font-size: 48px;
  margin-bottom: 8px;
  animation: bounce 1s ease infinite;
  opacity: 0.9;
}

.notification h2 {
  margin: 0;
  font-size: 24px;
  font-weight: 600;
  color: rgba(255, 255, 255, 0.95);
  transition: color 0.2s ease;
}

.notification p {
  margin: 0;
  font-size: 16px;
  color: rgba(255, 255, 255, 0.8);
  transition: color 0.2s ease;
}

.subtext {
  font-size: 14px !important;
  color: rgba(255, 255, 255, 0.6) !important;
  transition: color 0.2s ease;
}

.closeButton {
  all: unset;
  margin-top: 8px;
  padding: 12px 32px;
  background: rgba(74, 158, 255, 0.2);
  color: #4a9eff;
  border-radius: 8px;
  font-size: 15px;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s ease;
}

.closeButton:hover {
  background: rgba(74, 158, 255, 0.3);
  transform: translateY(-1px);
}

.closeButton:active {
  transform: translateY(0);
}

/* Light theme */
.lightTheme {
  background: rgba(255, 252, 242, 0.95);
  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
}

.lightTheme h2 {
  color: rgba(0, 0, 0, 0.9);
}

.lightTheme p {
  color: rgba(0, 0, 0, 0.7);
}

.lightTheme .subtext {
  color: rgba(0, 0, 0, 0.5) !important;
}

.lightTheme .closeButton {
  background: rgba(0, 102, 204, 0.1);
  color: #0066cc;
}

.lightTheme .closeButton:hover {
  background: rgba(0, 102, 204, 0.15);
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes slideUp {
  from {
    transform: translateY(20px);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes bounce {
  0%, 100% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(-10px);
  }
}

@keyframes slideDown {
  from {
    opacity: 0;
    transform: translateY(-10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
} 